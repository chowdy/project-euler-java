package solutions;

import lib.AbstractSolution;
import lib.PEUtils.*;

import static lib.PEUtils.getPentagonal;
import static lib.PEUtils.isPentagonal;

/*
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 *
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48,
 * is not pentagonal.
 *
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
 * D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Solution044 extends AbstractSolution {
    @Override
    public String run() throws Exception {

        long min = Long.MAX_VALUE;
        long max = 10000;

        for (int k = 1; k < max; k++) {
            System.out.println(k);
            for (int j = k+1; j < max; j++) {
                long pk = getPentagonal(k);
                long pj = getPentagonal(j);
                long D = Math.abs(pk - pj);

                if (D > min) {
                    break;
                }

                if (isPentagonal(pk + pj) && isPentagonal(D) && D < min) {
                    System.out.println("Found one! D = " + D);
                    min = D;
                }
            }
        }

        return min + "";
    }
}
