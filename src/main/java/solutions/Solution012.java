package solutions;

import lib.AbstractSolution;
import org.apache.commons.math3.primes.Primes;

/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
 * would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 *
 * The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 */
public class Solution012 extends AbstractSolution {
    @Override
    public String run() {
        int numDivisorsTarget = 500;
        long num = 0;
        for (long i = 1; true; i++) {
            num += i;
            int numDivisors = 2;
            for (long x = 2; x < num; x++) {
                if (num % x == 0) {
                    numDivisors++;
                } else if (x == 2 || x == 3 || x == 5 || x == 7 || x == 11 || x == 13 || x == 17) {
                    // Just skip if it doesn't contain the first few primes to cut things down.
                    // Like, how are you gonna get to 500 divisors if you're not divisible by the primes
                    // 2 through 13?
                    break;
                }
            }
            if (numDivisors > numDivisorsTarget) {
                return "" + num;
            }
        }
    }
}
